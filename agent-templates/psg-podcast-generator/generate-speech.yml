workflow:
  name: "generate-speech"
  title: "Generate Speech"
  description: "Workflow to generate speech."
  context-variables:
    debugger:
      enabled: true
    elevenlabs:
      api_key: "$TEMP_CONTEXT_VARIABLE_ELEVENLABS_API_KEY"
    machina-ai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
    machina-ai-fast:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_GROQ_API_KEY"
    storage:
      api_key: "$TEMP_CONTEXT_VARIABLE_AZURE_BLOB_STRING"
  inputs:
    messages: "$.get('messages', [])"
    event_code: "$.get('event_code')"
    voice_id: "$.get('voice_id')"
  outputs:
    audio_path: "$.get('audio_path')"
    message: "$.get('message')"
    summary: "$.get('summary')"
    workflow-status: "$.get('message') is not None and 'executed' or 'skipped'"
  tasks:

    # # Load similar documents
    # - type: "document"
    #   name: "load-similar-documents"
    #   description: "Load similar documents"
    #   config:
    #     action: "search"
    #     threshold-docs: 5
    #     threshold-similarity: 0.01
    #     search-limit: 1000
    #     search-vector: true
    #   connector:
    #     name: "machina-ai"
    #     command: "invoke_embedding"
    #     model: "text-embedding-3-small"
    #   inputs:
    #     name: "'content-snippet'"
    #     search-limit: "'1000'"
    #     search-query: "$.get('messages')"
    #   outputs:
    #     documents: "$.get('documents')"

    # Load similar documents
    - type: "document"
      name: "load-similar-documents"
      description: "Load similar documents"
      config:
        action: "search"
        search-limit: 1000
        search-vector: false
      filters:
        metadata.event_code: "$.get('event_code')"
      inputs:
        name: "'content-snippet'"
      outputs:
        documents: "$.get('documents')"

    # generate-content-prompt
    - type: "prompt"
      name: "generate-content-prompt"
      description: "Generate Content."
      connector:
        # name: "machina-ai-fast"
        # command: "invoke_prompt"
        # model: "llama-3.3-70b-versatile"
        # model: "llama-3.1-8b-instant"
        # model: "deepseek-r1-distill-llama-70b"
        # model: "deepseek-r1-distill-llama-70b-specdec"
        name: "machina-ai"
        command: "invoke_prompt"
        model: "gpt-4o"
      inputs:
        documents: "$.get('documents')"
        messages: "$.get('messages')"
      outputs:
        file_name: "$.get('file_name')"
        message: "$.get('content')"
        summary: "$.get('summary')"

    # get text to speech
    - type: "connector"
      name: "get text to speech"
      description: "Get a text to speech from ElevenLabs"
      connector:
        name: "elevenlabs"
        command: "get_text_to_speech"
        command_attribute:
          text: "$.get('message')"
          voice_id: "$.get('voice_id')"
          model_id: "$.get('model_id')"
          optimize_streaming_latency: "$.get('optimize_streaming_latency')"
          output_format: "$.get('output_format')"
      inputs:
        api_key: "$.get('api_key')"
      outputs:
        final_filename: f"text-to-speech-{datetime.now().strftime('%Y%m%d-%H%M%S')}.mp3"
        full_filepath: "$.get('file_path')"

    # store audio
    - type: "connector"
      name: "store audio"
      condition: "$.get('full_filepath') is not None"
      connector:
        name: "storage"
        command: "store_image"
      inputs:
        final_filename: "$.get('final_filename')"
        full_filepath: "$.get('full_filepath')"
      outputs:
        audio_path: "$.get('data')"