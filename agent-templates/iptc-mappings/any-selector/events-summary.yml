mappings:

  # iptc-events-summary
  - type: mapping
    name: iptc-events-summary
    title: "IPTC | Events Summary"
    description: "Selects multiple events summary equivalent to the search query"
    outputs:
      events_summary: |
        [
          " | ".join([
            event.get('name', 'N/A'),
            event.get('schema:sportName', 'N/A'),
            event.get('schema:startDate', 'N/A'),
            event.get('sport:competition', {}).get('name', 'N/A'),
            event.get('sport:competition', {}).get('sport:season', {}).get('name', 'N/A'),
            f"{next((c.get('name') for c in event.get('sport:competitors', []) if c.get('sport:qualifier') == 'home'), 'N/A')} vs {next((c.get('name') for c in event.get('sport:competitors', []) if c.get('sport:qualifier') == 'away'), 'N/A')}",
            event.get('sport:status', 'N/A'),
            f"Score: {event.get('sport:score', {}).get('sport:homeScore')} - {event.get('sport:score', {}).get('sport:awayScore')}" if event.get('sport:score', {}).get('sport:homeScore') is not None else 'No score',
            event.get('sport:venue', {}).get('name', 'N/A'),
            event.get('sport:venue', {}).get('schema:addressLocality', 'N/A')
          ])
          for event in $.get('events', [])
        ]
        
  # iptc-events-summary-statistics
  - type: mapping
    name: iptc-events-summary-statistics
    title: IPTC | Events Summary Statistics
    description: Summarizes team statistics from IPTC sport statistics
    outputs:
      events_summary_statistics: |
        " | ".join([
          f"{stat.get('sport:statParticipant', {}).get('name', 'N/A')} ({stat.get('sport:statParticipant', {}).get('sport:qualifier', 'N/A').upper()}): " + 
          ", ".join([
            f"{s.get('sport:statLabel')}: {s.get('sport:statValue')}" 
            for s in stat.get('sport:statistics', [])
          ])
          for stat in $.get('events_statistics', [])
        ])
  
  # iptc-events-summary-timeline
  - type: mapping
    name: iptc-events-summary-timeline
    title: "IPTC | Events Summary Timeline"
    description: "Summarizes timeline events from IPTC sport actions"
    outputs:
      events_summary_timeline: |
        [
          " | ".join(filter(None, [
            event.get('sport:actionType', '').split('/')[-1].replace('-', ' ').title() if event.get('sport:actionType') else event.get('type', 'N/A'),
            f"Team: {next((p.get('sport:participationBy', {}).get('sport:label') for p in event.get('sport:participation', []) if p.get('@type') == 'sport:TeamParticipation'), 'Unknown')}" if event.get('sport:participation') else None,
            f"Player: {', '.join([p.get('sport:participationBy', {}).get('sport:label', 'Unknown') for p in event.get('sport:participation', []) if p.get('@type') == 'sport:IndividualParticipation'])}" if any(p.get('@type') == 'sport:IndividualParticipation' for p in event.get('sport:participation', [])) else None,
            f"Time: {event.get('sport:minutesElapsed')}'" if event.get('sport:minutesElapsed') else None,
            f"Period: {event.get('sport:periodValue')}" if event.get('sport:periodValue') else None,
            f"Location: ({event.get('sport:fieldLocation')})" if event.get('sport:fieldLocation') else None,
            event.get('commentaries', [{}])[0].get('text', '') if event.get('commentaries') else None
          ]))
          for event in $.get('events_timeline', [])
        ]