workflow:

  # api-football-sync-fixtures-players-statistics
  name: "api-football-sync-fixtures-players-statistics"
  title: "API Football - Sync Fixtures Players Statistics"
  description: "Workflow to sync fixtures players statistics from API Football with detailed individual player performance data."
  context-variables:
    debugger:
      enabled: true
    api-football:
      x-apisports-key: "$TEMP_CONTEXT_VARIABLE_API_FOOTBALL_API_KEY"
    machina-ai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
  inputs:
    fixture: "$.get('fixture')"
    team: "$.get('team', None)"
  outputs:
    workflow-status: "'executed'"
  tasks:

    # iptc-api-football-id-conversion-mapping
    - type: mapping
      name: iptc-api-football-id-conversion-mapping
      title: "IPTC | API Football ID Conversion Mapping"
      description: "Convert IPTC URN IDs to original API Football IDs"
      condition: "$.get('fixture') is not None"
      inputs:
        iptc_schema_events: "[{'@id': $.get('fixture')}]"
      outputs:
        original_fixture_id: "$.get('original_ids', [''])[0]"
        iptc_schema_id: "$.get('iptc_schema_ids', [''])[0]"

    # api-football-get-fixtures-players-statistics
    - type: "connector"
      name: "api-football-get-fixtures-players-statistics"
      description: "Get fixtures players statistics from API Football."
      connector:
        name: "api-football"
        command: "get-fixtures/players"
      inputs:
        fixture: "$.get('original_fixture_id', $.get('fixture'))"
        team: "$.get('team')"
      outputs:
        fixtures-players-statistics: "$.get('response')"
        players-count: "len($.get('response', []))"

    # iptc-api-football-event-players-stats
    - type: mapping
      name: iptc-api-football-event-players-stats
      title: "Convert to IPTC Players Statistics"
      description: "Convert API Football players statistics to IPTC Soccer Statistics format"
      condition: "len($.get('fixtures-players-statistics', [])) > 0"
      inputs:
        fixtures_players_statistics: "$.get('fixtures-players-statistics', [])"
        fixture: "$.get('original_fixture_id', $.get('fixture'))"
        team: "$.get('team')"
      outputs:
        iptc_players_statistics: "$.get('iptc_players_statistics', {})"

    # task-bulk-save-fixtures-players-statistics
    - type: "document"
      name: "task-bulk-save-fixtures-players-statistics"
      description: "Bulk save the individual fixtures players statistics."
      condition: "len($.get('fixtures-players-statistics', [])) > 0"
      config:
        action: "bulk-update"
        embed-selector: "$.get('title')"
        embed-vector: true
        force-update: true
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      document_name: "'sport:IndividualParticipation'"
      documents:
        items: |
          [
            {
              **f,
              'metadata': {
                'action_code': str(f.get('@id', '')),
                'document_type': 'sport:IndividualParticipation',
                'event_code': '$.(iptc_schema_id)',
                'player_code': f.get('sport:participationBy', {}).get('@id', '')
              },
              'title': f.get('rdfs:label', '')
            }
            for f in $.get('iptc_players_statistics', [])
          ]