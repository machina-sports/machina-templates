workflow:
  name: "sportradar-soccer-sync-competitors"
  title: "Soccer - Competitors"
  description: "Workflow to synchronize a season competitors from SportRadar API to Machina."
  context-variables:
    sportradar-soccer:
      api_key: "$TEMP_CONTEXT_VARIABLE_SPORTRADAR_SOCCER_V4_API_KEY"
  inputs:
    season_id: "$.get('season_id')"
  outputs:
    competitors: "$.get('competitors')"
    workflow-status: "$.get('should_update') is not True and 'skipped' or 'executed'"
  tasks:
    # check-document-timedelta
    - type: "document"
      name: "check-document-timedelta"
      description: "Check if the competitors document has expired."
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      filters:
        value.sid: "$.get('season_id')"
        value.execution: "{'$gte': datetime.utcnow() - timedelta(days=0)}"
        value.status: "'active'"
      inputs:
        name: "'competitors'"
      outputs:
        documents: "$.get('documents')"
        should_update: "len($.get('documents')) == 0"

    # task-check-document-get-season
    - type: "document"
      name: "get-season"
      description: "Get the season document."
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      condition: "$.get('should_update') == True"
      filters:
        value.id: "$.get('season_id')"
      inputs:
        name: "'season'"
      outputs:
        season: "$.get('documents')[0] if $.get('documents') else None"

    # load-competitors
    - type: "connector"
      name: "load-competitors"
      description: "Get a season competitors from SportRadar"
      connector:
        name: "sportradar-soccer"
        command: "get-seasons/{season_id}/{data_type}"
        command_attribute:
          season_id: "$.get('season_id')"
          data_type: "'competitors.json'"
      condition: "$.get('should_update') == True and $.get('season') is not None"
      inputs:
        api_key: "$.get('api_key')"
      outputs:
        competitors: "$.get('season_competitors')"
        competitors_parsed: |
          [
            {
              **c,
              'metadata': {
                'team_code': c.get('id', '')
              },
              'version_control': {
                'updated': datetime.utcnow()
              },
              'title': f"{c.get('name', {})}",
              'selected': False
            }
            for c in $.get('season_competitors')
          ]

    # update-competitors
    - type: "document"
      name: "update-competitors"
      description: "Update the competitors document."
      config:
        action: "update"
        embed-vector: false
        force-update: true
      condition: "$.get('should_update') == True and $.get('season') is not None"
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      documents:
        competitors: |
          {
            'sid': $.get('season_id'),
            'data': $.get('competitors'),
            'title': f"{$.get('season', {}).get('value', {}).get('title', '')} - All Competitors",
            'execution': datetime.utcnow(),
            'status': 'active'
          }
      metadata:
        sid: "$.get('season_id')"
        document_type: "'synchronization'"

    # bulk-save-schedules
    - type: "document"
      name: "bulk-save-schedules"
      condition: "$.get('should_update') == True and $.get('season') is not None"
      description: "Bulk save the competitors."
      config:
        action: "bulk-update"
        embed-vector: false
        force-update: true
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      document_name: "'soccer-team'"
      documents:
        items: "$.get('competitors_parsed')"
      inputs:
        competitors_parsed: "$.get('competitors_parsed')"
