workflow:

  # sportradar-soccer-event-update
  name: sportradar-soccer-event-update
  title: Sportradar Soccer - Event Update
  description: Workflow to update a soccer game from SportRadar API by event code.
  context-variables:
    debugger:
      enabled: true
    machina-ai:
      api_key: $TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY
    sportradar-soccer:
      api_key: $TEMP_CONTEXT_VARIABLE_SPORTRADAR_SOCCER_V4_API_KEY
  inputs:
    event_document_id: $.get('event_document_id')
  outputs:
    event_document_id: $.get('event_document_id')
    workflow-status: $.get('event_exists') is not True and 'skipped' or 'executed'
  tasks:

    # load-event-by-code
    - type: document
      name: load-event-by-code
      description: Search event (sportradar) by code.
      condition: $.get('event_code') is not None
      config:
        action: search
        search-limit: 1
        search-vector: false
        search-sorters: ["value.start_time", 1]
      filters:
        document_id: $.get('event_document_id')
      outputs:
        event_document_id: $.get('documents')[0].get('_id', '') if $.get('documents') else None
        event_exists: len($.get('documents', [])) > 0
        event_code: $.get('documents')[0].get('metadata', {}).get('event_code') if $.get('documents') else None
        event_value: $.get('documents')[0].get('value', {}) if $.get('documents') else None

    # version-control-update
    - type: document
      name: version-control-update
      description: Update the events document version control.
      condition: $.get('event_exists') is True
      config:
        action: update
        embed-vector: false
        force-update: true
      filters:
        document_id: $.get('event_document_id')
      documents:
        sport:Event: |
          {
            **$.get('event_value', {}),
            'version_control': {
              **$.get('event_value', {}).get('version_control', {}),
              'processing': False
            }
          }
      