workflow:
  name: "sportradar-soccer-sync-standings"
  title: "Soccer - Standings"
  description: "Workflow to synchronize a season standings from SportRadar API to Machina."
  context-variables:
    debugger:
      enabled: false
    sportradar-soccer:
      api_key: "$TEMP_CONTEXT_VARIABLE_SPORTRADAR_SOCCER_V4_API_KEY"
  inputs:
    season_id: "$.get('season_id')"
  outputs:
    standings: "$.get('standings')"
    workflow-status: "$.get('should_update') is not True and 'skipped' or 'executed'"
  tasks:

    # task-check-document-timedelta
    - type: "document"
      name: "task-check-document-timedelta"
      description: "Check if the standings document has expired."
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      filters:
        value.sid: "$.get('season_id')"
        value.execution: "{'$gte': datetime.utcnow() - timedelta(days=7)}"
        value.status: "'active'"
      inputs:
        name: "'standings'"
      outputs:
        documents: "$.get('documents')"
        should_update: "len($.get('documents')) == 0"

    # task-check-document-get-season
    - type: "document"
      name: "get-season"
      description: "Get the season document."
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      condition: "$.get('should_update') == True"
      filters:
        metadata.season_id: "$.get('season_id')"
      inputs:
        name: "'season'"
      outputs:
        season: "$.get('documents')[0] if $.get('documents') else None"

    # task-load-schedules
    - type: "connector"
      name: "task-load-standings"
      description: "Get a season standings from SportRadar"
      condition: "$.get('should_update') == True and $.get('season') is not None"
      connector:
        name: "sportradar-soccer"
        command: "get-seasons/{season_id}/{data_type}"
        command_attribute:
          season_id: "$.get('season_id')"
          data_type: "'standings.json'"
      inputs:
        api_key: "$.get('api_key')"
      outputs:
        standings: "[x for x in $.get('standings') if x.get('type') == 'total']"

    # task-update-standings
    - type: "document"
      name: "task-update-standings"
      description: "Update the standings document."
      condition: "$.get('should_update') == True and $.get('season') is not None"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      documents:
        standings: |
          {
            'sid': $.get('season_id'),
            'data': $.get('standings'),
            'title': f"{$.get('season').get('value', {}).get('title', '')} - All Standings",
            'execution': datetime.utcnow(),
            'status': 'active'
          }
      metadata:
        sid: "$.get('season_id')"
        document_type: "'synchronization'"
