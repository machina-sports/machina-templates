workflow:
  name: "sportradar-soccer-sync-seasons"
  title: "Sportradar Soccer - Seasons"
  description: "Workflow to synchronize seasons from SportRadar API to Machina."
  context-variables:
    debugger:
      enabled: false
    sportradar-soccer:
      api_key: "$TEMP_CONTEXT_VARIABLE_SPORTRADAR_SOCCER_V4_API_KEY"
  inputs:
    competition_id: "$.get('competition_id')"
  outputs:
    seasons: "$.get('seasons')"
    workflow-status: "$.get('should_update') is not True and 'skipped' or 'executed'"
  tasks:
    # task-check-document-timedelta
    - type: "document"
      name: "check-document-timedelta"
      description: "Check if the seasons document has expired."
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      filters:
        value.cid: "$.get('competition_id')"
        value.execution: "{'$gte': datetime.utcnow() - timedelta(days=7)}"
        value.status: "'active'"
      inputs:
        name: "'seasons'"
      outputs:
        documents: "$.get('documents')"
        should_update: "len($.get('documents')) == 0"

    # task-check-document-get-competition
    - type: "document"
      name: "get-competition"
      description: "Get the competition document."
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      condition: "$.get('should_update') == True"
      filters:
        value.id: "$.get('competition_id')"
      inputs:
        name: "'competition'"
      outputs:
        competition: "$.get('documents')[0] if $.get('documents') else None"

    # task-load-seasons
    - type: "connector"
      name: "task-load-seasons"
      description: "Get Seasons from SportRadar"
      condition: "$.get('competition') is not None"
      connector:
        name: "sportradar-soccer"
        command: "get-competitions/{competition_id}/seasons.json"
        command_attribute:
          competition_id: "$.get('competition_id')"
      inputs:
        api_key: "$.get('api_key')"
        competition_value: "$.get('competition').get('value')"
      outputs:
        seasons: "$.get('seasons')"
        seasons_parsed: |
          [
            {
              **c,
              'title': f"{$.context('competition').get('category', {}).get('name', '')} {c.get('name', '')}",
              'selected': False
            }
            for c in $.get('seasons')
          ]

    # task-update-seasons
    - type: "document"
      name: "task-update-seasons"
      description: "Update the seasons document."
      condition: "$.get('competition') is not None and $.get('seasons') is not None"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      documents:
        seasons: |
          {
            'cid': $.get('competition_id'),
            'data': $.get('seasons'),
            'title': f"{$.get('competition').get('category', {}).get('name', '')} {$.get('competition').get('name', '')} - All Seasons",
            'execution': datetime.utcnow(),
            'status': 'active'
          }
      metadata:
        cid: "$.get('competition_id')"
        document_type: "'synchronization'"

    # task-bulk-save-seasons
    - type: "document"
      name: "task-bulk-save-seasons"
      description: "Bulk save the seasons."
      condition: "$.get('competition') is not None and $.get('seasons') is not None"
      config:
        action: "bulk-save"
        embed-vector: false
        force-update: true
      connector:
        name: "machina-ai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      document_name: "'season'"
      documents:
        items: "$.get('seasons_parsed')"
      inputs:
        seasons_parsed: "$.get('seasons_parsed')"
      metadata:
        document_type: "'season'"
