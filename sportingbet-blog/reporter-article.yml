workflow:
  name: "reporter-article"
  title: "Reporter Article"
  description: "Workflow to produce an article."
  context-variables:
    debugger:
      enabled: true
    sdk-openai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
  inputs:
    event_code: "$.get('event_code') or None"
  outputs:
    events: "$.get('events')"
    workflow-status: "$.get('event_exists') is not True and 'skipped' or 'executed'"
  
  tasks:
    
    # 0 load-event-by-code
    - type: "document"
      name: "load-event-by-code"
      description: "Search event (sportradar) by code."
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["start_time", 1]
      filters:
        value.sport_event.id: "$.get('event_code')"
      inputs:
        name: "{'$in': ['nba-game', 'soccer-game']}"
      outputs:
        event_exists: "len($.get('documents', [])) > 0"
        event_selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        event_type: "$.get('documents')[0].get('name') if $.get('documents') else None"

    # 1 load-event-by-schedule
    - type: "document"
      name: "load-event-by-schedule"
      description: "Search for schedule events (sportradar)."
      condition: "$.get('event_exists') is not True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["start_time", 1]
      filters:
        value.start_time: "{'$gt': datetime.utcnow(), '$lt': datetime.utcnow() + timedelta(hours=48)}"
        value.version_control.processing: "{'$ne': True}"
        value.version_control.article_status: "{'$exists': False}"
        value.version_control.research_odds_status: "'processed'"
        value.version_control.research_stats_status: "'processed'"
        value.version_control.research_news_status: "'processed'"
        value.version_control.research_team_status: "'processed'"
      inputs:
        name: "{'$in': ['nba-game', 'soccer-game']}"
      outputs:
        event_exists: "len($.get('documents', [])) > 0"
        event_selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        event_type: "$.get('documents')[0].get('name') if $.get('documents') else None"

    # 2 sportradar-nba-mapping
    - type: "mapping"
      name: "sportradar-nba-mapping"
      description: "Transform the sportradar nba data"
      condition: "$.get('event_exists') is True and $.get('event_type') == 'nba-game'"
      inputs:
        event_selected: "$.get('event_selected')"
      outputs:
        article_count: "$.get('article_count')"
        event_code: "$.get('event_code')"
        team_home_name: "$.get('team_home_name')"
        team_away_name: "$.get('team_away_name')"
        team_home_id: "$.get('team_home_id')"
        team_away_id: "$.get('team_away_id')"
        title: "$.get('title')"

    # 3 sportradar-soccer-mapping
    - type: "mapping"
      name: "sportradar-soccer-mapping"
      description: "Transform the sportradar soccer data"
      condition: "$.get('event_exists') is True and $.get('event_type') == 'soccer-game'"
      inputs:
        event_selected: "$.get('event_selected')"
      outputs:
        article_count: "$.get('article_count')"
        event_code: "$.get('event_code')"
        team_home_name: "$.get('team_home_name')"
        team_away_name: "$.get('team_away_name')"
        team_home_id: "$.get('team_home_id')"
        team_away_id: "$.get('team_away_id')"
        title: "$.get('title')"

    # 4 version-control-update (schedule)
    - type: "document"
      name: "version-control-update-schedule"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True and $.get('event_type') == 'soccer-game'"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        soccer-game: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': True,
              'article_status': 'processing'
            }
          }
      metadata:
        event_code: "$.get('event_code')"

    # 5 version-control-update (nba-game)
    - type: "document"
      name: "version-control-update-nba-game"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True and $.get('event_type') == 'nba-game'"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        nba-game: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': True,
              'article_status': 'processing'
            }
          }
      metadata:
        event_code: "$.get('event_code')"

    # 6 load-team-history
    - type: "document"
      name: "load-team-history"
      description: "Search for registered team history."
      condition: "$.get('event_exists') is True"
      config:
        action: "search"
        search-limit: 2
        search-vector: false
      filters:
        metadata.event_code: "$.get('event_code')"
      inputs:
        name: "'team-history'"
      outputs:
        result-team-history: "$.get('documents', [])"
        result-team-history-snippets: |
          [
            {
              **s,
              'title': f"{d.get('value', {}).get('title', '')} - {s.get('title', '')}"
            }
            for d in $.get('documents', [])
            for s in d.get('value', {}).get('content', {}).get('snippets', [])
          ]

    # 7 load-team-news
    - type: "document"
      name: "load-team-news"
      description: "Search for registered news."
      condition: "$.get('event_exists') is True"
      config:
        action: "search"
        search-limit: 2
        search-vector: false
      filters:
        metadata.event_code: "$.get('event_code')"
      inputs:
        name: "'team-news'"
      outputs:
        result-team-news: "$.get('documents', [])"
        result-team-news-snippets: |
          [
            {
              **s,
              'title': f"{d.get('value', {}).get('title', '')} - {s.get('title', '')}"
            }
            for d in $.get('documents', [])
            for s in d.get('value', {}).get('content', {}).get('snippets', [])
          ]

    # 8 load-market-odds
    - type: "document"
      name: "load-market-odds"
      description: "Search for registered market odds."
      condition: "$.get('event_exists') is True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      filters:
        metadata.event_code: "$.get('event_code')"
      inputs:
        name: "'market-odds'"
      outputs:
        result-market-odds: "$.get('documents', [])"
        result-market-odds-snippets: |
          [
            {
              **s,
              'title': f"{d.get('value', {}).get('title', '')} - {s.get('title', '')}"
            }
            for d in $.get('documents', [])
            for s in d.get('value', {}).get('content', {}).get('snippets', [])
          ]

    # 9 load-standings
    - type: "document"
      name: "load-standings"
      description: "Search for registered standings."
      condition: "$.get('event_exists') is True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      filters:
        metadata.sid: "$.get('season')"
      inputs:
        name: "'standings-analysis'"
      outputs:
        result-standings: "$.get('documents', [])"
        result-standings-snippets: |
          [
            {
              **s,
              'title': f"{d.get('value', {}).get('title', '')} - {s.get('title', '')}"
            }
            for d in $.get('documents', [])
            for s in d.get('value', {}).get('content', {}).get('snippets', [])
          ]

    # 10 load-comparison
    - type: "document"
      name: "load-comparison"
      description: "Search for registered comparison."
      condition: "$.get('event_exists') is True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      filters:
        metadata.event_code: "$.get('event_code')"
      inputs:
        name: "'comparison-analysis'"
      outputs:
        result-comparison: "$.get('documents', [])"
        result-comparison-snippets: |
          [
            {
              **s,
              'title': f"{d.get('value', {}).get('title', '')} - {s.get('title', '')}"
            }
            for d in $.get('documents', [])
            for s in d.get('value', {}).get('content', {}).get('snippets', [])
          ]

    # 11 prompt-reporter-article-br
    - type: "prompt"
      name: "prompt-reporter-preview-br"
      description: "Generate a preview for the upcoming game"
      condition: "$.get('event_exists') is True"
      connector:
        name: "sdk-vertex"
        command: "invoke_prompt"
        model: "gemini-2.0-flash-001"
      inputs:
        start_time: "$.get('event_selected').get('start_time')"
        content-snippets: |
          [
            *$.get('result-team-history-snippets', []),
            *$.get('result-team-news-snippets', []),
            *$.get('result-market-odds-snippets', []),
            *$.get('result-standings-snippets', []),
            *$.get('result-comparison-snippets', [])
          ]
      outputs:
        reporter-article-br: "$"

    # 12 prompt-reporter-article-en
    - type: "prompt"
      name: "prompt-reporter-preview-en"
      description: "Generate a preview for the upcoming game"
      condition: "$.get('event_exists') is True"
      connector:
        name: "sdk-vertex"
        command: "invoke_prompt"
        model: "gemini-2.0-flash-001"
      inputs:
        start_time: "$.get('event_selected').get('start_time')"
        content-snippets: |
          [
            *$.get('result-team-history-snippets', []),
            *$.get('result-team-news-snippets', []),
            *$.get('result-market-odds-snippets', []),
            *$.get('result-standings-snippets', []),
            *$.get('result-comparison-snippets', [])
          ]
      outputs:
        reporter-article-en: "$"

    # 13 update-article-br
    - type: "document"
      name: "update-article-br"
      description: "Update the document."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        content-article: |
          {
            **$.get('reporter-article-br', {}),
            'execution': datetime.utcnow(),
            'status': 'active'
          }
      metadata:
        document_type: "'content-article'"
        event_code: "$.get('event_code')"
        event_type: "$.get('event_type')"
        language: "'br'"

    # 14 update-article-en
    - type: "document"
      name: "update-article-en"
      description: "Update the document."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        content-article: |
          {
            **$.get('reporter-article-en', {}),
            'execution': datetime.utcnow(),
            'status': 'active'
          }
      metadata:
        document_type: "'content-article'"
        event_type: "$.get('event_type')"
        event_code: "$.get('event_code')"
        language: "'en'"

    # 15 version-control-success-schedule
    - type: "document"
      name: "version-control-success-schedule"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True and $.get('event_type') == 'soccer-game'"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        soccer-game: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': False,
              'article_count': $.get('article_count', 0) + 1,
              'article_status': 'processed',
              'updated': datetime.utcnow()
            }
          }
      metadata:
        event_code: "$.get('event_code')"
    
    # 16 version-control-success-nba-game
    - type: "document"
      name: "version-control-success-nba-game"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True and $.get('event_type') == 'nba-game'"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        nba-game: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': False,
              'article_count': $.get('article_count', 0) + 1,
              'article_status': 'processed',
              'updated': datetime.utcnow()
            }
          }
      metadata:
        event_code: "$.get('event_code')"
